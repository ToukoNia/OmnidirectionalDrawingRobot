#ifndef Arm_h
#define Arm_h
#include <Servo.h>
#include <Arduino.h>
#define Pi 3.142
#define INCREMENT 0.0157
#define S1_BASE -0.8
#define S2_BASE -2.4

class Arm { 
  private:
   float S1Array[40] = { 
      0.486584699736955, 0.42064103690907, 0.373101659120527, 0.335241481108417, 0.303708188425815, 0.276795529540265, 0.253499224099566, 0.233172612735065, 0.215373271063271, 0.199785185268063, 0.186175429331263, 0.174368301871385, 0.164229013910395, 0.155652930631361, 0.148558205802782, 0.142880573902029, 0.138569561112073, 0.135585655625895, 0.133898141662264, 0.133483401456301, 0.134323552294813, 0.136405326330966, 0.139719127959025, 0.144258221988878, 0.15001801878806, 0.156995431859283, 0.165188290204823, 0.174594793078961, 0.185212998857262, 0.19704034309106, 0.210073183580917, 0.224306372625202, 0.239732858550694, 0.256343320240397, 0.274125839638321, 0.293065618110981, 0.313144743050081, 0.334342011178215, 0.356632814645813, 0.379989095175245
    };
    float S2Array[40] = {
      -0.331055526460299, -0.469694203249091, -0.575532847542792, -0.664357529816234, -0.742250641685009, -0.812320347248575, -0.876406087437505, -0.935700876377778, -0.991028576872013, -1.04298460926787, -1.0920142792643, -1.13845952234507, -1.18258835972494, -1.22461429117737, -1.26470953200075, -1.30301432653514, -1.33964367346946, -1.37469229314525, -1.40823837055472, -1.4403464272323, -1.47106956184748, -1.50045122606856, -1.52852665378148, -1.55532402892534, -1.58086545452538, -1.60516776952594, -1.62824324855586, -1.65010021136769, -1.67074356243152, -1.69017527639521, -1.70839484140736, -1.72539966933799, -1.74118547951599, -1.75574666059152, -1.76907661343015, -1.78116807649511, -1.79201343393879, -1.80160500558954, -1.809935317181, -1.8169973485326
   };

    Servo S1;
    Servo S2;
    Servo S3;

    float S1RadAngle;
    float S2RadAngle;

    const byte S1pwm = 53;  
    const byte S2pwm = 51;  
    const byte S3pwm = 49; 

    int s0 = 47, s1 = 45, s2 = 41, s3 = 39;
    int out = 43;
    volatile unsigned int countR = 0, countG = 0, countB = 0;

    int whiteCount = 0;
    int greenCount = 0;
    bool whiteSection = false; bool GreenCheck;
    
    unsigned int readColor();
    bool IsItGreen();
    int moveServo(Servo servo, int refPulseWidth, float servoRadAngle);
    void storePosition();
    float increment(float currentAngle, float targetAngle);
    void RateLimitServo(Servo servo, int refPulseWidth, float currentAngle, float servoRadAngle);
  public:
    void Setup();
    void dropPen();
    void drawLine();

};

#endif